// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SecurityResponseStatusEnum string

const (
	SecurityResponseStatusEnumSuccess SecurityResponseStatusEnum = "SUCCESS"
	SecurityResponseStatusEnumFailed  SecurityResponseStatusEnum = "FAILED"
)

func (e SecurityResponseStatusEnum) ToPointer() *SecurityResponseStatusEnum {
	return &e
}

func (e *SecurityResponseStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUCCESS":
		fallthrough
	case "FAILED":
		*e = SecurityResponseStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SecurityResponseStatusEnum: %v", v)
	}
}

// SecurityResponse - return Compatibility
type SecurityResponse struct {
	Message *string                     `json:"message,omitempty"`
	Status  *SecurityResponseStatusEnum `json:"status,omitempty"`
}
