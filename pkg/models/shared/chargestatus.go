// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ChargeStatusStateEnum string

const (
	ChargeStatusStateEnumCharging     ChargeStatusStateEnum = "CHARGING"
	ChargeStatusStateEnumFullyCharged ChargeStatusStateEnum = "FULLY_CHARGED"
	ChargeStatusStateEnumNotCharging  ChargeStatusStateEnum = "NOT_CHARGING"
)

func (e ChargeStatusStateEnum) ToPointer() *ChargeStatusStateEnum {
	return &e
}

func (e *ChargeStatusStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CHARGING":
		fallthrough
	case "FULLY_CHARGED":
		fallthrough
	case "NOT_CHARGING":
		*e = ChargeStatusStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ChargeStatusStateEnum: %s", s)
	}
}

// ChargeStatus - return EV Charge reading
type ChargeStatus struct {
	// Indicates whether a charging cable is currently plugged into the vehicleâ€™s charge port.
	IsPluggedIn *bool                  `json:"isPluggedIn,omitempty"`
	State       *ChargeStatusStateEnum `json:"state,omitempty"`
}
