// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SuccessResponseStatusEnum string

const (
	SuccessResponseStatusEnumSuccess SuccessResponseStatusEnum = "SUCCESS"
	SuccessResponseStatusEnumFailed  SuccessResponseStatusEnum = "FAILED"
)

func (e SuccessResponseStatusEnum) ToPointer() *SuccessResponseStatusEnum {
	return &e
}

func (e *SuccessResponseStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUCCESS":
		fallthrough
	case "FAILED":
		*e = SuccessResponseStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SuccessResponseStatusEnum: %v", v)
	}
}

// SuccessResponse - return Success Response
type SuccessResponse struct {
	Message *string                    `json:"message,omitempty"`
	Status  *SuccessResponseStatusEnum `json:"status,omitempty"`
}
